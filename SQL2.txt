create table employee(ID int,ename varchar(200));
create table Department(ID int,Department varchhar(200));
create table employeeDepartmentMapping(ID int,EID int,DID int);


insert into employee(ID,ename) values(1,'lil');
insert into employee(ID,ename) values(2,'pil');
insert into employee(ID,ename) values(3,'kil');
insert into employee(ID,ename) values(4,'til');
insert into employee(ID,ename) values(5,'mil');

insert into employeemgr(ID,ename,MgrID) values(1,'lil',1);
insert into employeemgr(ID,ename,MgrID) values(2,'pil',2);
insert into employeemgr(ID,ename,MgrID) values(3,'kil',1);
insert into employeemgr(ID,ename,MgrID) values(4,'til',1);
insert into employeemgr(ID,ename,MgrID) values(6,'mil',2);


insert into Department(ID,Department) values(1,'it');
insert into Department(ID,Department) values(2,'hr');
insert into Department(ID,Department) values(3,'admin');
insert into Department(ID,Department) values(4,'support');
insert into Department(ID,Department) values(5,'security');
insert into Department(ID,Department) values(6,'house keeping');



insert into employeeNameDepartmentMapping(ID,EmployeeID, Department ID) values(1,1,3);
insert into employeeNameDepartmentMapping(ID,EmployeeID, Department ID) values(2,2,1);
insert into employeeNameDepartmentMapping(ID,EmployeeID, Department ID) values(3,3,4);
insert into employeeNameDepartmentMapping(ID,EmployeeID, Department ID) values(4,4,6);
insert into employeeNameDepartmentMapping(ID,EmployeeID, Department ID) values(5,6,5);

select * from employee
select * from Department
select * from employeeNameDepartmentMapping

select employeename,department from employee,Department; //cartisian join//

select EMPLOYEENAME,DEPARTMENTID from employee,employeeNameDepartmentMapping where employee.ID=employeeNameDepartmentMapping.EmployeeID //Equi join//

select EMPLOYEENAME,DEPARTMENTID from employee,employeeNameDepartmentMapping where employee.ID Between 1 AND 2; //NON-Equi join


select EMPLOYEENAME,DEPARTMENTID from employee,employeeNameDepartmentMapping where employee.ID(+)=employeeNameDepartmentMapping.EmployeeID; //Outerjoin

select mgr.EMPLOYEENAME as Employee,emp.EMPLOYEENAME as Manager from employeemge mge .,employeemgr emp where mgr.ManagerID=emp.ID; //Self join//


create table sample(ID int NOT NULL,text Varchar(200) NOT NULL,createdon Date default sysdate);
insert into sample(ID,text) values(1,'hil');
select *from sample
insert into sample(ID) values(2);
create table sample1(ID int NOT NULL,text Varchar(200),SampleValue number(4,2),createdon Date default sysdate,CONSTRAINT ID_UK UNIQUE(ID));
insert into sample1(ID,TEXT) values(1,'MEE');
create table sample2(ID int CONSTRAINT ID_PK PRIMARY KEY,Text Varchar2(200) );
create table sample3(ID int,Text Varchar2(200),SampleValue Number(4,2) CONSTRAINT SampleValue_MIN CHECK(SampleValue>100) );
insert into sample3(ID,Text) values(1,'railey');
alter table sample3 add(xvalue int);
select * from sample3;
alter table sample3 Modify(SampleValue int);
select * from sample3;
alter table sample3 drop COLUMN XVALUE;
drop table sample3;
RENAME sample3 to sample4;
truncate table sample3
Delete from sample;
create index sample_index on sample(ID);
create SYNONYM lil for sample3
select * from sample
create sequence s1 increment by 1 start with 1 maxvalue 10000 NOCYCLE;
insert into sample(ID,Text) values(s1.NEXTVAL,'pol');
insert into sample(ID,Text) values(s1.NEXTVAL,'pol');
truncate table sample
insert into sample(ID,Text) values(1,'railey');
create sequence s1 increment by 1 start with 1 maxvalue 10000 NOCYCLE;
insert into sample(ID,Text) values(s1.NEXTVAL,'pol');
insert into sample(ID,Text) values(s1.NEXTVAL,'pol');
select * from HR.EMPLOYEES;
select * from HR.DEPARTMENTS;
select DEPARTMENT_NAME,Concat(FIRST_NAME,LAST_NAME) as EMPLOYEE_NAME from HR.DEPARTMENTS DEPT join HR.EMPLOYEES EMP on EMP.DEPARTMENT_ID=DEPT.DEPATMENT_TD;
select *from EMPLOYEE_DEPARTMENT_
create table employee_copy as select HR.EMPLOYEE_ID,FIRST_NAME,DEPARTMENT_ID from HR.EMPLOYEES ehere 1=2
select * from EMPLOYEES;
select * from employee_copy;
MERGE INTO employee_copy using HR.EMPLOYEES ON(HR. EMPLOYEES.DEPARTMENT_ID=employee_copy.DEPARTMENT_ID)
WHEN NOT MATCHED THEN
INSERT(EMPLOYEE_ID,FIRST_NAME,DEPARTMENT_ID)values(H.EMPLOYEES.EMPLOYEE_ID,HR.EMPLOYEES.FIRST_NAME,HR.EMPLOYEES.DEPARTMENT_TD)


